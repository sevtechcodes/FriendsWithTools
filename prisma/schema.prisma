// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  clerkId        String         @unique
  username       String         
  name           String
  lastName       String
  email          String        @unique
  conversations  Conversation[] @relation("UserConversations")
  reviews        ToolsReviews[]
  listings       ToolCard[]
  messages       Message[]
  wishlist       WishList[]
  toolrequests   ToolRequest[]
}

model ToolCard {
  id             String             @id @default(uuid())
  name           String
  description    String
  location       String
  dailyRate      Int
  weeklyRate     Int?
  monthlyRate    Int?
  picture        String?
  liked          Boolean
  available      Boolean
  reviews        ToolsReviews[]
  toolrequests    ToolRequest[]
  ownerId        String
  owner          User              @relation(fields: [ownerId], references: [id])
  toolCategoryId String
  ToolCategory   ToolCategory       @relation(fields: [toolCategoryId], references: [id])
  wishlists      ToolsOnWishlists[]
  belongsto      WishList[]
}

model WishList {
  id      String             @id @default(uuid())
  ownerId String             @unique
  owner   User               @relation(fields: [ownerId], references: [id])
  list ToolCard[]
  tools   ToolsOnWishlists[]
}

model ToolsOnWishlists {
  toolId     String
  tool       ToolCard @relation(fields: [toolId], references: [id])
  wishlistId String
  wishlist   WishList @relation(fields: [wishlistId], references: [id])

  @@id([toolId, wishlistId])
}

model ToolCategory {
  id           String     @id @default(uuid())
  categoryName String?
  tools        ToolCard[]
}

model ToolsReviews {
  id         String   @id @default(uuid())
  content    String
  createdAt  DateTime @default(now())
  authorId   String
  author     User     @relation(fields: [authorId], references: [id])
  toolCardId String
  toolCard   ToolCard @relation(fields: [toolCardId], references: [id])
}

model Conversation {
  id       String    @id @default(uuid())
  messages Message[]
  senderId String
  sender   User      @relation("UserConversations", fields: [senderId], references: [id])
}

model Message {
  id             String       @id @default(uuid())
  content        String
  createdAt      DateTime     @default(now())
  authorId       String
  author         User         @relation(fields: [authorId], references: [id])
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
}

model ToolRequest {
  id        String   @id @default(uuid())
  status    String
  toolId    String
  tool      ToolCard @relation(fields: [toolId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}
